+ Keystore:
    - a file used to store cryptographic keys, certificates, and related security credentials.
    - used for signing Android apps, securing communications, and authenticating with external services.

    * Signing Android Apps: 
        - sign APK's with a digital signature; during apk install this key get verified.

    * Authentication and Security:
        - such as SSL/TLS connections, client authentication, and securing communication with external services.
        - services like Firebase Authentication, Google Sign-In, Google Maps API, etc.
        
+ TYPES:
    1. Debug Keystore:
        - Automatically generated by the Android SDK tools for development 
          and debugging purposes. It contains a default set of cryptographic 
          keys and certificates used to sign debug builds of Android apps.

        - Create cmd: keytool -genkeypair -v -storetype PKCS12 -keystore debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US"
        - get SHA cmd: keytool -list -v -keystore .android/debug.keystore -alias androiddebugkey -storepass android -keypass android

    2. Release Keystore: 
        - A keystore file that developers create and manage themselves. 
          It's used for signing release builds of Android apps before 
          they are published to app stores.
        + Create:
            - Google does not provide a specific tool or service for generating release keystores directly.
            - generate release keystores using the keytool command.
            - STEPS:
                1. generate a keystore file. CMD: keytool -genkeypair -v -keystore keystore.jks -keyalg RSA -keysize 2048 -validity 10000 -alias key
                2. Enter Keystore Information: Follow the prompts to enter information about the keystore, including
                    - Keystore password: Choose a secure password for the keystore.
                    - Key alias: Enter an alias for the key.
                    - Key password: Choose a password for the key.
                    - Distinguished Name fields: Enter information such as your name, organization, city, etc.
                    * After entering the information, the keystore file (keystore.jks) 
                      will be generated in the current directory.
                NOTE: Keep the keystore file and its passwords secure. Losing the keystore or its passwords 
                      can result in being unable to update your app in the future.

        + Retrive SHA CMD:  keytool -list -v -keystore keystore.jks -alias key
            - Replace "keystore.jks" with the actual filename of your keystore file 
              and key with the alias you provided during keystore creation.

+ SHA:
    - Secure Hash Algorithm.

    - SHA is a type of cryptographic hash function, which means it 
      takes an input (or message) and produces a fixed-size output 
      (hash value) that is unique to that input.

    - output is typically a string of numbers and letters that appears 
      random and is difficult to reverse-engineer back to the original input.
    
    - There are several versions of the SHA algorithm, such as SHA-1, SHA-256,
      SHA-384, and SHA-512, each producing hash values of different lengths.